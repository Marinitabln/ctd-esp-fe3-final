import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import { getComics } from 'dh-marvel/services/marvel/marvel.service';
import { Comics} from 'interfaces/comic';
import { Container} from '@mui/material';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import ComicsGrid from 'dh-marvel/components/comics/home/ComicsGrid';
import PaginationBar from 'dh-marvel/components/pagination/PaginationBar';

interface Props {
    comics: Comics
}

const itemsPerPage = 12;

const Index: NextPage<Props> = ({ comics }) => {

    const comicsTotal: number = comics?.data.total
    const router = useRouter();
    const [currentPage, setCurrentPage] = useState<number | null>(1);

    const noOfPages = Math.ceil(comicsTotal / itemsPerPage);
   
    useEffect(() => {
        localStorage.clear();
    }, []);

    useEffect(() => {
        if (currentPage !== null) {
            router?.push(`/?page=${currentPage}`);
        }
    }, [currentPage]);
  
   return (
        <>
            <Head>
                <title>DH Marvel</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <BodySingle title={"Comics Marvel"}>
                <Container maxWidth="lg" sx={{ marginTop: '20px', marginBottom: '50px' }}>
                    <PaginationBar noOfPages={noOfPages} currentPage={currentPage} setCurrentPage={setCurrentPage} />
                    <ComicsGrid comics={comics} />
                    <PaginationBar noOfPages={noOfPages} currentPage={currentPage} setCurrentPage={setCurrentPage} />
                </Container>
            </BodySingle>
        </>
    )
}


export const getServerSideProps: GetServerSideProps = async ({ query, res }) => {

    const { page } = query

    const offset = itemsPerPage * Number(page) - itemsPerPage
    const comics = await getComics(offset, itemsPerPage)

    res.setHeader(
        'Cache-Control',
        'public, s-maxage=10, stale-while-revalidate=59'
    )
    return {
        props: {
            comics
        }
    }
}


export default Index
